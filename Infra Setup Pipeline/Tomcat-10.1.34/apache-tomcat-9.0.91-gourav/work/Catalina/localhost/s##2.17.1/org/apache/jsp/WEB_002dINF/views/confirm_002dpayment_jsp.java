/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-11-13 06:06:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class confirm_002dpayment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\" />\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("     <link rel=\"icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${browserIcon}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" type=\"image/x-icon\">\n");
      out.write("        <link rel=\"shortcut icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${browserIcon}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" type=\"image/x-icon\">\n");
      out.write("        <script>\n");
      out.write("            var editable = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${partialAllowFlag}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("; // Set this variable based on your condition\n");
      out.write("          function initializeEditable() {\n");
      out.write("                     var emiAmountInput = document.getElementById('emiAmount');\n");
      out.write("                     var editIcon = document.getElementById('editIcon');\n");
      out.write("                     if (!editable) { // false = not editable\n");
      out.write("                         emiAmountInput.setAttribute('readonly', true);\n");
      out.write("                         editIcon.style.display = 'none'; // Hide the edit icon\n");
      out.write("                     } else { // true = editable\n");
      out.write("                         emiAmountInput.removeAttribute('readonly');\n");
      out.write("                         editIcon.style.display = 'inline'; // Show the edit icon\n");
      out.write("                     }\n");
      out.write("                 }\n");
      out.write("\n");
      out.write("            function toggleEditable() {\n");
      out.write("                if (!editable) {\n");
      out.write("                    return; // Exit the function if editable is false\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                var emiAmountInput = document.getElementById('emiAmount');\n");
      out.write("                var notification = document.getElementById('notification');\n");
      out.write("                var payNowButton = document.getElementById(\"payNowButton\");\n");
      out.write("\n");
      out.write("                notification.style.display = 'none';\n");
      out.write("                emiAmountInput.removeAttribute('readonly');\n");
      out.write("                payNowButton.disabled = false;\n");
      out.write("                emiAmountInput.focus();\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            // Function to save the original EMI amount to local storage\n");
      out.write("            function saveOriginalEmiAmount() {\n");
      out.write("                localStorage.setItem('originalEmiAmount', \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emiAmount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            // Function to retrieve and set the original EMI amount from local storage\n");
      out.write("            function setOriginalEmiAmount() {\n");
      out.write("                var emiAmountInput = document.getElementById('emiAmount');\n");
      out.write("                var originalEmiAmount = localStorage.getItem('originalEmiAmount');\n");
      out.write("                if (originalEmiAmount) {\n");
      out.write("                    emiAmountInput.value = originalEmiAmount;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            // Save the original EMI amount when the page is loaded\n");
      out.write("            window.addEventListener('DOMContentLoaded', function() {\n");
      out.write("                saveOriginalEmiAmount();\n");
      out.write("                initializeEditable();\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            // Set the original EMI amount when the page is shown\n");
      out.write("            window.addEventListener('pageshow', setOriginalEmiAmount);\n");
      out.write("            var paNowClicked = false;\n");
      out.write("\n");
      out.write("            function disablePayNowButton() {\n");
      out.write("                var emiAmount = document.getElementById('emiAmount').value.trim(); // Trim to remove leading and trailing spaces\n");
      out.write("                var payNowButton = document.getElementById(\"payNowButton\");\n");
      out.write("                var notification = document.getElementById('notification');\n");
      out.write("                var notificationDigits = document.getElementById('notificationDigits');\n");
      out.write("\n");
      out.write("                var hasDecimalPoint = false; // Flag to track the presence of a decimal point\n");
      out.write("\n");
      out.write("                for (var i = 0; i < emiAmount.length; i++) {\n");
      out.write("                    // Check if the character is not a digit and not a decimal point\n");
      out.write("                    if (isNaN(parseInt(emiAmount[i])) && emiAmount[i] !== '.' && emiAmount[i] !== '-') {\n");
      out.write("                        payNowButton.disabled = true;\n");
      out.write("                        notificationDigits.style.display = 'block';\n");
      out.write("                        return; // Exit the function if validation fails\n");
      out.write("                    }\n");
      out.write("                    // Check if the character is a decimal point\n");
      out.write("                    if (emiAmount[i] === '.') {\n");
      out.write("                        hasDecimalPoint = true; // Set the flag to true if a decimal point is found\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                notificationDigits.style.display = 'none';\n");
      out.write("                payNowButton.disabled = false;\n");
      out.write("\n");
      out.write("                // Validation For EMI amount limit to 11\n");
      out.write("                if (emiAmount <= ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emiNotificationAmount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(") {\n");
      out.write("                    payNowButton.disabled = true;\n");
      out.write("                    notification.style.display = 'block';\n");
      out.write("                    return; // Exit the function if validation fails\n");
      out.write("                } else {\n");
      out.write("                    notification.style.display = 'none';\n");
      out.write("                }\n");
      out.write("                payNowButton.disabled = false;\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("    <title>Payment Confirmation</title>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("        font-family: sans-serif;\n");
      out.write("        display: flex;\n");
      out.write("        justify-content: center;\n");
      out.write("        align-items: center;\n");
      out.write("        height:91vh;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .container {\n");
      out.write("        width: 80%;\n");
      out.write("        max-width: 400px; /* Limit maximum width for larger screens */\n");
      out.write("        box-sizing: border-box;\n");
      out.write("        padding: 10px;\n");
      out.write("        display: flex;\n");
      out.write("        flex-direction: column;\n");
      out.write("        justify-content: space-between;\n");
      out.write("        min-height: 95vh; /* Fill at least the entire viewport height */\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      img.logo {\n");
      out.write("        width: 100%;\n");
      out.write("        max-width: 200px;\n");
      out.write("        height: auto;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .header {\n");
      out.write("            width: 35%;\n");
      out.write("            max-width: 170px;\n");
      out.write("            height: auto;\n");
      out.write("             }\n");
      out.write("\n");
      out.write("      .name-details {\n");
      out.write("        display: flex;\n");
      out.write("      }\n");
      out.write("      .backIcon {\n");
      out.write("        height: 50px;\n");
      out.write("        margin: 12px 15px 0 0;\n");
      out.write("      }\n");
      out.write("      .link-container {\n");
      out.write("        display: flex;\n");
      out.write("      }\n");
      out.write("      .link-container p:nth-child(2) {\n");
      out.write("        color: #422460;\n");
      out.write("      }\n");
      out.write("      .link-container p:nth-child(1) {\n");
      out.write("        color: #333333;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .link-details {\n");
      out.write("        color: #333333;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .payment-details {\n");
      out.write("        display: flex;\n");
      out.write("        flex-direction: column;\n");
      out.write("        flex-wrap: wrap;\n");
      out.write("        justify-content: space-between;\n");
      out.write("        background: #f6f6f6;\n");
      out.write("        padding: 20px 10px;\n");
      out.write("        margin-bottom: 10px;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .payment-detail {\n");
      out.write("        display: flex;\n");
      out.write("        margin-bottom: 10px;\n");
      out.write("        padding: 5px 0;\n");
      out.write("      }\n");
      out.write("      .payment-details-title {\n");
      out.write("        color: #7d7a81;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      .payment-detail-label {\n");
      out.write("        color: #7d7a81;\n");
      out.write("        width: 120px;\n");
      out.write("        font-weight: 500;\n");
      out.write("      }\n");
      out.write("      .pay-now-button {\n");
      out.write("        background-color: #f7792a;\n");
      out.write("        color: #fff;\n");
      out.write("        padding: 10px 2px;\n");
      out.write("        border: none;\n");
      out.write("        border-radius: 3px;\n");
      out.write("        cursor: pointer;\n");
      out.write("        font-size: 18px;\n");
      out.write("        width: 100%;\n");
      out.write("        height: 30px;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      img.footer-logo {\n");
      out.write("        /* width: 100%; */\n");
      out.write("        max-width: 100px;\n");
      out.write("        height: 25px;\n");
      out.write("        margin: 14px;\n");
      out.write("        margin-top:45px;\n");
      out.write("\n");
      out.write("      }\n");
      out.write("      footer {\n");
      out.write("        text-align: center;\n");
      out.write("        margin: 0 auto;\n");
      out.write("        margin-top: auto;\n");
      out.write("        display: flex;\n");
      out.write("        align-items: center;\n");
      out.write("        justify-content: center;\n");
      out.write("\n");
      out.write("      }\n");
      out.write("      input {\n");
      out.write("        margin-left: 30px;\n");
      out.write("        width: 100%;\n");
      out.write("        background: transparent;\n");
      out.write("      }\n");
      out.write("      input#partyName {\n");
      out.write("        margin: 0;\n");
      out.write("        padding-left: 10px;\n");
      out.write("      }\n");
      out.write("      .pow\n");
      out.write("      {\n");
      out.write("      margin-top:45px;\n");
      out.write("      align:center;\n");
      out.write("      }\n");
      out.write("      #partyName {\n");
      out.write("        border: 0;\n");
      out.write("        font-size: 16px;\n");
      out.write("      }\n");
      out.write("      #apacNumber {\n");
      out.write("        border: 0;\n");
      out.write("        font-size: 16px;\n");
      out.write("      }\n");
      out.write("      #dueDate {\n");
      out.write("        border: 0;\n");
      out.write("        font-size: 16px;\n");
      out.write("      }\n");
      out.write("      #emiAmount {\n");
      out.write("        border: 0;\n");
      out.write("        font-size: 16px;\n");
      out.write("      }\n");
      out.write("      #loanAmount {\n");
      out.write("        border: 0;\n");
      out.write("        font-size: 16px;\n");
      out.write("      }\n");
      out.write("      .paylog{\n");
      out.write("      padding-top:20px;\n");
      out.write("      margin-top : 50px;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      @media screen and (max-width: 768px) {\n");
      out.write("        .container {\n");
      out.write("          width: 90%;\n");
      out.write("        }\n");
      out.write("      }\n");
      out.write("\n");
      out.write("         .payment-detail-value {\n");
      out.write("              display: flex;\n");
      out.write("              align-items: center; /* Align items vertically */\n");
      out.write("          }\n");
      out.write("\n");
      out.write("         .edit-icon {\n");
      out.write("                margin-left: 1px; /* Adjust spacing between the input and the icon */\n");
      out.write("                font-size: 16px; /* Adjust icon size */\n");
      out.write("                color: #333; /* Adjust icon color */\n");
      out.write("                cursor: pointer; /* Add cursor pointer */\n");
      out.write("                rotate: 75deg;\n");
      out.write("\n");
      out.write("            }\n");
      out.write("\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("       <div class=\"container\">\n");
      out.write("        <form>\n");
      out.write("                <div class=\"row\" style=\"visibility: hidden;\">\n");
      out.write("                               <div class=\"column\" >\n");
      out.write("                                  <label for=\"name\">First Name</label>\n");
      out.write("                                  <input type=\"text\" name=\"shortenKey\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${shortenKey}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"Your first name here\" required>\n");
      out.write("                               </div>\n");
      out.write("                            </div>\n");
      out.write("              <header>\n");
      out.write("                    <img\n");
      out.write("                      class=\"header\"\n");
      out.write("                      src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${headerLogoLocation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("                      alt=\"Cli Logo\"\n");
      out.write("                    />\n");
      out.write("                  </header>\n");
      out.write("            <main class=\"main-container\">\n");
      out.write("                    <div class=\"link-container\">\n");
      out.write("                      <img\n");
      out.write("                        class=\"backIcon\"\n");
      out.write("                        src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${images_directory}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/bankLogo.png\"\n");
      out.write("                        alt=\"Bank Logo\"\n");
      out.write("                      />\n");
      out.write("                      <div class=\"link-details\">\n");
      out.write("                        <div class=\"name-details\">\n");
      out.write("                          <p>Dear</p>\n");
      out.write("                          <input\n");
      out.write("                            type=\"text\"\n");
      out.write("                            value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${partyName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\"\n");
      out.write("                            id=\"partyName\"\n");
      out.write("                            readonly\n");
      out.write("                          />\n");
      out.write("                        </div>\n");
      out.write("                        <p>\n");
      out.write("                            Thank you for selecting ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serviceName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(". To finalize the transaction,\n");
      out.write("                            please click the link and proceed to make the payment according to\n");
      out.write("                            the specified amount.\n");
      out.write("                        </p>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"payment-container\">\n");
      out.write("                    <h4 class=\"payment-details-title\">PAYMENT DETAILS</h4>\n");
      out.write("                    <div class=\"payment-details\">\n");
      out.write("                        <div class=\"payment-detail\">\n");
      out.write("                            <div class=\"payment-detail-label\">Account No.</div>\n");
      out.write("                            <div class=\"payment-detail-colon\">:</div>\n");
      out.write("                            <div class=\"payment-detail-value\">\n");
      out.write("                                <input type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apacCardNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"apacNumber\" name=\"apacNumber\" oninput=\"validAmountt(this)\" readonly />\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"payment-detail\">\n");
      out.write("                            <div class=\"payment-detail-label\" style='margin-right:5px;'>EMI</div>\n");
      out.write("                            <div class=\"payment-detail-colon\" \"> :</div>\n");
      out.write("                            <div class=\"payment-detail-value\">\n");
      out.write("                                <input type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emiAmount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"emiAmount\" name=\"emiAmount\" />\n");
      out.write("                               <span id=\"editIcon\" class=\"edit-icon\" onclick=\"toggleEditable()\">&#9998;</span>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <!-- Notification for EMI amount less than 10 -->\n");
      out.write("                        <div id=\"notification\" style=\"display: none; background-color: #f44336; color: white; padding: 10px; border-radius: 5px; margin-top: 5px;\">\n");
      out.write("                            ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emiNotificationMessage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emiNotificationAmount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("                        </div>\n");
      out.write("                        <div id=\"notificationDigits\" style=\"display: none; background-color: #f44336; color: white; padding: 10px; border-radius: 5px; margin-top: 5px;\">\n");
      out.write("                              ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${digitsnotification}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"payment-detail\">\n");
      out.write("                            <div class=\"payment-detail-label\">Due Date</div>\n");
      out.write("                            <div class=\"payment-detail-colon\">:</div>\n");
      out.write("                            <div class=\"payment-detail-value\">\n");
      out.write("                                <input type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dueDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"dueDate\" name=\"dueDate\" readonly />\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"pay-now-button\">\n");
      out.write("                    <button id=\"payNowButton\" type=\"submit\" class=\"pay-now-button\" formaction=\"/s/payNow\" onclick=\"disablePayNowButton()\">\n");
      out.write("                        <span cmCollectLogoLocationlass=\"paylog\">Pay Now</span>\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("            </main>\n");
      out.write("            <footer>\n");
      out.write("                    <p class = \"pow\">Powered by</p>\n");
      out.write("                    <img\n");
      out.write("                      src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mCollectLogoLocation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("                      class=\"footer-logo\"\n");
      out.write("                      alt=\"Footer Logo\"\n");
      out.write("                    />\n");
      out.write("                  </footer>\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
