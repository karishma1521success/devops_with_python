/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2025-02-12 19:52:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class expiry_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("   <head>\n");
      out.write("      <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("      <meta charset=\"UTF-8\">\n");
      out.write("      <link rel=\"apple-touch-icon\" type=\"image/png\" href=\"https://cpwebassets.codepen.io/assets/favicon/apple-touch-icon-5ae1a0698dcc2402e9712f7d01ed509a57814f994c660df9f7a952f3060705ee.png\">\n");
      out.write("      <meta name=\"apple-mobile-web-app-title\" content=\"CodePen\">\n");
      out.write("      <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"https://cpwebassets.codepen.io/assets/favicon/favicon-aec34940fbc1a6e787974dcd360f2c6b63348d4b1f4e06c77743096d55480f33.ico\">\n");
      out.write("      <link rel=\"mask-icon\" type=\"image/x-icon\" href=\"https://cpwebassets.codepen.io/assets/favicon/logo-pin-b4b4269c16397ad2f0f7a01bcdf513a1994f4c94b8af2f191c09eb0d601762b1.svg\" color=\"#111\">\n");
      out.write("      <link rel=\"canonical\" href=\"https://codepen.io/uweigl/pen/LYLwZPp\">\n");
      out.write("      <script>\n");
      out.write("         window.console = window.console || function(t) {};\n");
      out.write("      </script>\n");
      out.write("   </head>\n");
      out.write("   <body translate=\"no\">\n");
      out.write("      <title> Link Expired</title>\n");
      out.write("      <style>\n");
      out.write("         body {\n");
      out.write("         font-family: sans-serif;\n");
      out.write("         background: white;\n");
      out.write("         color: #808080;\n");
      out.write("         text-align: center;\n");
      out.write("         }\n");
      out.write("         .animation-ctn {\n");
      out.write("         text-align: center;\n");
      out.write("         margin-top: 5em;\n");
      out.write("         }\n");
      out.write("         @-webkit-keyframes checkmark {\n");
      out.write("         0% {\n");
      out.write("         stroke-dashoffset: 100px\n");
      out.write("         }\n");
      out.write("         100% {\n");
      out.write("         stroke-dashoffset: 200px\n");
      out.write("         }\n");
      out.write("         }\n");
      out.write("         @-ms-keyframes checkmark {\n");
      out.write("         0% {\n");
      out.write("         stroke-dashoffset: 100px\n");
      out.write("         }\n");
      out.write("         100% {\n");
      out.write("         stroke-dashoffset: 200px\n");
      out.write("         }\n");
      out.write("         }\n");
      out.write("         @keyframes checkmark {\n");
      out.write("         0% {\n");
      out.write("         stroke-dashoffset: 100px\n");
      out.write("         }\n");
      out.write("         100% {\n");
      out.write("         stroke-dashoffset: 0px\n");
      out.write("         }\n");
      out.write("         }\n");
      out.write("         @-webkit-keyframes checkmark-circle {\n");
      out.write("         0% {\n");
      out.write("         stroke-dashoffset: 480px\n");
      out.write("         }\n");
      out.write("         100% {\n");
      out.write("         stroke-dashoffset: 960px;\n");
      out.write("         }\n");
      out.write("         }\n");
      out.write("         @-ms-keyframes checkmark-circle {\n");
      out.write("         0% {\n");
      out.write("         stroke-dashoffset: 240px\n");
      out.write("         }\n");
      out.write("         100% {\n");
      out.write("         stroke-dashoffset: 480px\n");
      out.write("         }\n");
      out.write("         }\n");
      out.write("         @keyframes checkmark-circle {\n");
      out.write("         0% {\n");
      out.write("         stroke-dashoffset: 480px\n");
      out.write("         }\n");
      out.write("         100% {\n");
      out.write("         stroke-dashoffset: 960px\n");
      out.write("         }\n");
      out.write("         }\n");
      out.write("         @keyframes colored-circle {\n");
      out.write("         0% {\n");
      out.write("         opacity: 0\n");
      out.write("         }\n");
      out.write("         100% {\n");
      out.write("         opacity: 100\n");
      out.write("         }\n");
      out.write("         }\n");
      out.write("         /* other styles */\n");
      out.write("         /* .svg svg {\n");
      out.write("         display: none\n");
      out.write("         }\n");
      out.write("         */\n");
      out.write("         .inlinesvg .svg svg {\n");
      out.write("         display: inline\n");
      out.write("         }\n");
      out.write("         /* .svg img {    display: none} */\n");
      out.write("         .icon--order-success svg polyline {\n");
      out.write("         -webkit-animation: checkmark 0.25s ease-in-out 0.7s backwards;\n");
      out.write("         animation: checkmark 0.25s ease-in-out 0.7s backwards\n");
      out.write("         }\n");
      out.write("         .icon--order-success svg circle {\n");
      out.write("         -webkit-animation: checkmark-circle 0.6s ease-in-out backwards;\n");
      out.write("         animation: checkmark-circle 0.6s ease-in-out backwards;\n");
      out.write("         }\n");
      out.write("         .icon--order-success svg circle#colored {\n");
      out.write("         -webkit-animation: colored-circle 0.6s ease-in-out 0.7s backwards;\n");
      out.write("         animation: colored-circle 0.6s ease-in-out 0.7s backwards;\n");
      out.write("         }\n");
      out.write("         h1 {\n");
      out.write("         margin-top: 25px;\n");
      out.write("         font-size: 18px;\n");
      out.write("         font-family: sans-serif;\n");
      out.write("         }\n");
      out.write("         p {\n");
      out.write("         margin-top: 15px;\n");
      out.write("         font-size: 14px;\n");
      out.write("         font-family: sans-serif;\n");
      out.write("         }\n");
      out.write("      </style>\n");
      out.write("      <div class=\"animation-ctn\">\n");
      out.write("         <div class=\"icon icon--order-success svg\">\n");
      out.write("            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"154px\" height=\"154px\">\n");
      out.write("               <g fill=\"none\" stroke=\"#F44812\" stroke-width=\"2\">\n");
      out.write("                  <circle cx=\"77\" cy=\"77\" r=\"72\" style=\"stroke-dasharray:480px, 480px; stroke-dashoffset: 960px;\"></circle>\n");
      out.write("                  <circle id=\"colored\" fill=\"#F44812\" cx=\"77\" cy=\"77\" r=\"72\" style=\"stroke-dasharray:480px, 480px; stroke-dashoffset: 960px;\"></circle>\n");
      out.write("                  <polyline class=\"st0\" stroke=\"#fff\" stroke-width=\"10\" points=\"43.5,77.8  112.2,77.8 \" style=\"stroke-dasharray:100px, 100px; stroke-dashoffset: 200px;\"></polyline>\n");
      out.write("               </g>\n");
      out.write("            </svg>\n");
      out.write("         </div>\n");
      out.write("      </div>\n");
      out.write("      <div>\n");
      out.write("         <h1>Payment Link Expired</h1>\n");
      out.write("      </div>\n");
      out.write("   </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
